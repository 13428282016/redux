{"version":3,"sources":["makeExportsHot.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC;IAC9C,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAEvD,SAAS,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE;AAChC,MAAI,iBAAiB,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;;AAEvC,WAAO,KAAK,CAAC;GACd;;AAED,MAAI,YAAY,GAAG,CAAC,CAAC,OAAO;MACxB,iBAAiB,GAAG,eAAe,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC;MACrD,iBAAiB,GAAG,KAAK,CAAC;;AAE9B,MAAI,iBAAiB,EAAE;AACrB,KAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;AACrD,qBAAiB,GAAG,IAAI,CAAC;GAC1B;;AAED,OAAK,IAAI,GAAG,IAAI,CAAC,CAAC,OAAO,EAAE;AACzB,QAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE;AAC5D,eAAS;KACV;;AAED,QAAI,iBAAiB,IAAI,GAAG,KAAK,MAAM,EAAE;;;AAGvC,eAAS;KACV;;AAED,QAAI,KAAK,CAAC;AACV,QAAI;AACF,WAAK,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;KAC3B,CAAC,OAAO,GAAG,EAAE;AACZ,eAAS;KACV;;AAED,QAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;AAClC,eAAS;KACV;;AAED,QAAI,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE;AAC5D,OAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,mBAAmB,GAAG,GAAG,CAAC,CAAC;AAC7D,uBAAiB,GAAG,IAAI,CAAC;KAC1B,MAAM;AACL,aAAO,CAAC,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,sYAAsY,CAAC,CAAC;KAClb;GACF;;AAED,SAAO,iBAAiB,CAAC;CAC1B;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"makeExportsHot-compiled.js","sourcesContent":["'use strict';\n\nvar isReactClassish = require('./isReactClassish'),\n    isReactElementish = require('./isReactElementish');\n\nfunction makeExportsHot(m, React) {\n  if (isReactElementish(m.exports, React)) {\n    // React elements are never valid React classes\n    return false;\n  }\n\n  var freshExports = m.exports,\n      exportsReactClass = isReactClassish(m.exports, React),\n      foundReactClasses = false;\n\n  if (exportsReactClass) {\n    m.exports = m.makeHot(m.exports, '__MODULE_EXPORTS');\n    foundReactClasses = true;\n  }\n\n  for (var key in m.exports) {\n    if (!Object.prototype.hasOwnProperty.call(freshExports, key)) {\n      continue;\n    }\n\n    if (exportsReactClass && key === 'type') {\n      // React 0.12 also puts classes under `type` property for compat.\n      // Skip to avoid updating twice.\n      continue;\n    }\n\n    var value;\n    try {\n      value = freshExports[key];\n    } catch (err) {\n      continue;\n    }\n\n    if (!isReactClassish(value, React)) {\n      continue;\n    }\n\n    if (Object.getOwnPropertyDescriptor(m.exports, key).writable) {\n      m.exports[key] = m.makeHot(value, '__MODULE_EXPORTS_' + key);\n      foundReactClasses = true;\n    } else {\n      console.warn(\"Can't make class \" + key + \" hot reloadable due to being read-only. To fix this you can try two solutions. First, you can exclude files or directories (for example, /node_modules/) using 'exclude' option in loader configuration. Second, if you are using Babel, you can enable loose mode for `es6.modules` using the 'loose' option. See: http://babeljs.io/docs/advanced/loose/ and http://babeljs.io/docs/usage/options/\");\n    }\n  }\n\n  return foundReactClasses;\n}\n\nmodule.exports = makeExportsHot;\n"]}
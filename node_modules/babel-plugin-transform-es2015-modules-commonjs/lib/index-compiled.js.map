{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _Symbol = require(\"babel-runtime/core-js/symbol\")[\"default\"];\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _Object$create = require(\"babel-runtime/core-js/object/create\")[\"default\"];\n\nvar _Object$keys = require(\"babel-runtime/core-js/object/keys\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _path2 = require(\"path\");\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar buildRequire = _babelTemplate2[\"default\"](\"\\n  require($0);\\n\");\n\nvar buildExportsModuleDeclaration = _babelTemplate2[\"default\"](\"\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\");\n\nvar buildExportsFrom = _babelTemplate2[\"default\"](\"\\n  Object.defineProperty(exports, $0, {\\n    enumerable: true,\\n    get: function () {\\n      return $1;\\n    }\\n  });\\n\");\n\nvar buildLooseExportsModuleDeclaration = _babelTemplate2[\"default\"](\"\\n  exports.__esModule = true;\\n\");\n\nvar buildExportsAssignment = _babelTemplate2[\"default\"](\"\\n  exports.$0 = $1;\\n\");\n\nvar buildExportAll = _babelTemplate2[\"default\"](\"\\n  for (let KEY in OBJECT) {\\n    if (KEY === \\\"default\\\") continue;\\n\\n    Object.defineProperty(exports, KEY, {\\n      enumerable: true,\\n      get: function () {\\n        return OBJECT[KEY];\\n      }\\n    });\\n  }\\n\");\n\nvar THIS_BREAK_KEYS = [\"FunctionExpression\", \"FunctionDeclaration\", \"ClassProperty\", \"ClassMethod\", \"ObjectMethod\"];\n\nexports[\"default\"] = function () {\n  var REASSIGN_REMAP_SKIP = _Symbol();\n\n  var reassignmentVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(path) {\n      var name = path.node.name;\n      var remap = this.remaps[name];\n      if (!remap) return;\n\n      // redeclared in this scope\n      if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n      if (path.parentPath.isCallExpression({ callee: path.node })) {\n        path.replaceWith(t.sequenceExpression([t.numericLiteral(0), remap]));\n      } else {\n        path.replaceWith(remap);\n      }\n    },\n\n    AssignmentExpression: function AssignmentExpression(path) {\n      var node = path.node;\n      if (node[REASSIGN_REMAP_SKIP]) return;\n\n      var left = path.get(\"left\");\n      if (!left.isIdentifier()) return;\n\n      var name = left.node.name;\n      var exports = this.exports[name];\n      if (!exports) return;\n\n      // redeclared in this scope\n      if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n      node[REASSIGN_REMAP_SKIP] = true;\n\n      for (var _iterator = exports, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var reid = _ref;\n\n        node = buildExportsAssignment(reid, node).expression;\n      }\n\n      path.replaceWith(node);\n    },\n\n    UpdateExpression: function UpdateExpression(path) {\n      var arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n\n      var name = arg.node.name;\n      var exports = this.exports[name];\n      if (!exports) return;\n\n      // redeclared in this scope\n      if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n      var node = t.assignmentExpression(path.node.operator[0] + \"=\", arg.node, t.numericLiteral(1));\n\n      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord() || path.node.prefix) {\n        return path.replaceWith(node);\n      }\n\n      var nodes = [];\n      nodes.push(node);\n\n      var operator = undefined;\n      if (path.node.operator === \"--\") {\n        operator = \"+\";\n      } else {\n        // \"++\"\n        operator = \"-\";\n      }\n      nodes.push(t.binaryExpression(operator, arg.node, t.numericLiteral(1)));\n\n      path.replaceWithMultiple(t.sequenceExpression(nodes));\n    }\n  };\n\n  return {\n    inherits: require(\"babel-plugin-transform-strict-mode\"),\n\n    visitor: {\n      ThisExpression: function ThisExpression(path, state) {\n        if (state.opts.allowTopLevelThis !== true && !path.findParent(function (path) {\n          return !path.is(\"shadow\") && THIS_BREAK_KEYS.indexOf(path.type) >= 0;\n        })) {\n          path.replaceWith(t.identifier(\"undefined\"));\n        }\n      },\n\n      Program: {\n        exit: function exit(path) {\n          var strict = !!this.opts.strict;\n\n          var scope = path.scope;\n\n          // rename these commonjs variables if they're declared in the file\n          scope.rename(\"module\");\n          scope.rename(\"exports\");\n          scope.rename(\"require\");\n\n          var hasExports = false;\n          var hasImports = false;\n\n          var body /*: Array<Object>*/ = path.get(\"body\");\n          var imports = _Object$create(null);\n          var exports = _Object$create(null);\n\n          var nonHoistedExportNames = _Object$create(null);\n\n          var topNodes = [];\n          var remaps = _Object$create(null);\n\n          var requires = _Object$create(null);\n\n          function addRequire(source, blockHoist) {\n            var cached = requires[source];\n            if (cached) return cached;\n\n            var ref = path.scope.generateUidIdentifier(_path2.basename(source, _path2.extname(source)));\n\n            var varDecl = t.variableDeclaration(\"var\", [t.variableDeclarator(ref, buildRequire(t.stringLiteral(source)).expression)]);\n\n            if (typeof blockHoist === \"number\" && blockHoist > 0) {\n              varDecl._blockHoist = blockHoist;\n            }\n\n            topNodes.push(varDecl);\n\n            return requires[source] = ref;\n          }\n\n          function addTo(obj, key, arr) {\n            var existing = obj[key] || [];\n            obj[key] = existing.concat(arr);\n          }\n\n          for (var _iterator2 = body, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _getIterator(_iterator2);;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var _path = _ref2;\n\n            if (_path.isExportDeclaration()) {\n              hasExports = true;\n\n              var specifiers = [].concat(_path.get(\"declaration\"), _path.get(\"specifiers\"));\n              for (var _iterator3 = specifiers, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _getIterator(_iterator3);;) {\n                var _ref3;\n\n                if (_isArray3) {\n                  if (_i3 >= _iterator3.length) break;\n                  _ref3 = _iterator3[_i3++];\n                } else {\n                  _i3 = _iterator3.next();\n                  if (_i3.done) break;\n                  _ref3 = _i3.value;\n                }\n\n                var specifier = _ref3;\n\n                var ids = specifier.getBindingIdentifiers();\n                if (ids.__esModule) {\n                  throw specifier.buildCodeFrameError(\"Illegal export \\\"__esModule\\\"\");\n                }\n              }\n            }\n\n            if (_path.isImportDeclaration()) {\n              // istanbul ignore next\n\n              var _importsEntry$specifiers;\n\n              hasImports = true;\n\n              var key = _path.node.source.value;\n              var importsEntry = imports[key] || {\n                specifiers: [],\n                maxBlockHoist: 0\n              };\n\n              (_importsEntry$specifiers = importsEntry.specifiers).push.apply(_importsEntry$specifiers, _path.node.specifiers);\n\n              if (typeof _path.node._blockHoist === \"number\") {\n                importsEntry.maxBlockHoist = Math.max(_path.node._blockHoist, importsEntry.maxBlockHoist);\n              }\n\n              imports[key] = importsEntry;\n\n              _path.remove();\n            } else if (_path.isExportDefaultDeclaration()) {\n              var declaration = _path.get(\"declaration\");\n              if (declaration.isFunctionDeclaration()) {\n                var id = declaration.node.id;\n                var defNode = t.identifier(\"default\");\n                if (id) {\n                  addTo(exports, id.name, defNode);\n                  topNodes.push(buildExportsAssignment(defNode, id));\n                  _path.replaceWith(declaration.node);\n                } else {\n                  topNodes.push(buildExportsAssignment(defNode, t.toExpression(declaration.node)));\n                  _path.remove();\n                }\n              } else if (declaration.isClassDeclaration()) {\n                var id = declaration.node.id;\n                var defNode = t.identifier(\"default\");\n                if (id) {\n                  addTo(exports, id.name, defNode);\n                  _path.replaceWithMultiple([declaration.node, buildExportsAssignment(defNode, id)]);\n                } else {\n                  _path.replaceWith(buildExportsAssignment(defNode, t.toExpression(declaration.node)));\n                }\n              } else {\n                _path.replaceWith(buildExportsAssignment(t.identifier(\"default\"), declaration.node));\n              }\n            } else if (_path.isExportNamedDeclaration()) {\n              var declaration = _path.get(\"declaration\");\n              if (declaration.node) {\n                if (declaration.isFunctionDeclaration()) {\n                  var id = declaration.node.id;\n                  addTo(exports, id.name, id);\n                  topNodes.push(buildExportsAssignment(id, id));\n                  _path.replaceWith(declaration.node);\n                } else if (declaration.isClassDeclaration()) {\n                  var id = declaration.node.id;\n                  addTo(exports, id.name, id);\n                  _path.replaceWithMultiple([declaration.node, buildExportsAssignment(id, id)]);\n                  nonHoistedExportNames[id.name] = true;\n                } else if (declaration.isVariableDeclaration()) {\n                  var declarators = declaration.get(\"declarations\");\n                  for (var _iterator4 = declarators, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _getIterator(_iterator4);;) {\n                    var _ref4;\n\n                    if (_isArray4) {\n                      if (_i4 >= _iterator4.length) break;\n                      _ref4 = _iterator4[_i4++];\n                    } else {\n                      _i4 = _iterator4.next();\n                      if (_i4.done) break;\n                      _ref4 = _i4.value;\n                    }\n\n                    var decl = _ref4;\n\n                    var id = decl.get(\"id\");\n\n                    var init = decl.get(\"init\");\n                    if (!init.node) init.replaceWith(t.identifier(\"undefined\"));\n\n                    if (id.isIdentifier()) {\n                      addTo(exports, id.node.name, id.node);\n                      init.replaceWith(buildExportsAssignment(id.node, init.node).expression);\n                      nonHoistedExportNames[id.node.name] = true;\n                    } else {\n                      // todo\n                    }\n                  }\n                  _path.replaceWith(declaration.node);\n                }\n                continue;\n              }\n\n              var specifiers = _path.get(\"specifiers\");\n              if (specifiers.length) {\n                var nodes = [];\n                var source = _path.node.source;\n                if (source) {\n                  var ref = addRequire(source.value, _path.node._blockHoist);\n\n                  for (var _iterator5 = specifiers, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _getIterator(_iterator5);;) {\n                    var _ref5;\n\n                    if (_isArray5) {\n                      if (_i5 >= _iterator5.length) break;\n                      _ref5 = _iterator5[_i5++];\n                    } else {\n                      _i5 = _iterator5.next();\n                      if (_i5.done) break;\n                      _ref5 = _i5.value;\n                    }\n\n                    var specifier = _ref5;\n\n                    if (specifier.isExportNamespaceSpecifier()) {\n                      // todo\n                    } else if (specifier.isExportDefaultSpecifier()) {\n                        // todo\n                      } else if (specifier.isExportSpecifier()) {\n                          if (specifier.node.local.name === \"default\") {\n                            topNodes.push(buildExportsFrom(t.stringLiteral(specifier.node.exported.name), t.memberExpression(t.callExpression(this.addHelper(\"interopRequireDefault\"), [ref]), specifier.node.local)));\n                          } else {\n                            topNodes.push(buildExportsFrom(t.stringLiteral(specifier.node.exported.name), t.memberExpression(ref, specifier.node.local)));\n                          }\n                          nonHoistedExportNames[specifier.node.exported.name] = true;\n                        }\n                  }\n                } else {\n                  for (var _iterator6 = specifiers, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _getIterator(_iterator6);;) {\n                    var _ref6;\n\n                    if (_isArray6) {\n                      if (_i6 >= _iterator6.length) break;\n                      _ref6 = _iterator6[_i6++];\n                    } else {\n                      _i6 = _iterator6.next();\n                      if (_i6.done) break;\n                      _ref6 = _i6.value;\n                    }\n\n                    var specifier = _ref6;\n\n                    if (specifier.isExportSpecifier()) {\n                      addTo(exports, specifier.node.local.name, specifier.node.exported);\n                      nonHoistedExportNames[specifier.node.exported.name] = true;\n                      nodes.push(buildExportsAssignment(specifier.node.exported, specifier.node.local));\n                    }\n                  }\n                }\n                _path.replaceWithMultiple(nodes);\n              }\n            } else if (_path.isExportAllDeclaration()) {\n              topNodes.push(buildExportAll({\n                KEY: _path.scope.generateUidIdentifier(\"key\"),\n                OBJECT: addRequire(_path.node.source.value, _path.node._blockHoist)\n              }));\n              _path.remove();\n            }\n          }\n\n          for (var source in imports) {\n            var _imports$source = imports[source];\n            var specifiers = _imports$source.specifiers;\n            var maxBlockHoist = _imports$source.maxBlockHoist;\n\n            if (specifiers.length) {\n              var uid = addRequire(source, maxBlockHoist);\n\n              var wildcard = undefined;\n\n              for (var i = 0; i < specifiers.length; i++) {\n                var specifier = specifiers[i];\n                if (t.isImportNamespaceSpecifier(specifier)) {\n                  if (strict) {\n                    remaps[specifier.local.name] = uid;\n                  } else {\n                    var varDecl = t.variableDeclaration(\"var\", [t.variableDeclarator(specifier.local, t.callExpression(this.addHelper(\"interopRequireWildcard\"), [uid]))]);\n\n                    if (maxBlockHoist > 0) {\n                      varDecl._blockHoist = maxBlockHoist;\n                    }\n\n                    topNodes.push(varDecl);\n                  }\n                  wildcard = specifier.local;\n                } else if (t.isImportDefaultSpecifier(specifier)) {\n                  specifiers[i] = t.importSpecifier(specifier.local, t.identifier(\"default\"));\n                }\n              }\n\n              for (var _iterator7 = specifiers, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _getIterator(_iterator7);;) {\n                var _ref7;\n\n                if (_isArray7) {\n                  if (_i7 >= _iterator7.length) break;\n                  _ref7 = _iterator7[_i7++];\n                } else {\n                  _i7 = _iterator7.next();\n                  if (_i7.done) break;\n                  _ref7 = _i7.value;\n                }\n\n                var specifier = _ref7;\n\n                if (t.isImportSpecifier(specifier)) {\n                  var target = uid;\n                  if (specifier.imported.name === \"default\") {\n                    if (wildcard) {\n                      target = wildcard;\n                    } else {\n                      target = wildcard = path.scope.generateUidIdentifier(uid.name);\n                      var varDecl = t.variableDeclaration(\"var\", [t.variableDeclarator(target, t.callExpression(this.addHelper(\"interopRequireDefault\"), [uid]))]);\n\n                      if (maxBlockHoist > 0) {\n                        varDecl._blockHoist = maxBlockHoist;\n                      }\n\n                      topNodes.push(varDecl);\n                    }\n                  }\n                  remaps[specifier.local.name] = t.memberExpression(target, t.cloneWithoutLoc(specifier.imported));\n                }\n              }\n            } else {\n              // bare import\n              topNodes.push(buildRequire(t.stringLiteral(source)));\n            }\n          }\n\n          if (hasImports && _Object$keys(nonHoistedExportNames).length) {\n            var hoistedExportsNode = t.identifier(\"undefined\");\n\n            for (var _name in nonHoistedExportNames) {\n              hoistedExportsNode = buildExportsAssignment(t.identifier(_name), hoistedExportsNode).expression;\n            }\n\n            topNodes.unshift(t.expressionStatement(hoistedExportsNode));\n          }\n\n          // add __esModule declaration if this file has any exports\n          if (hasExports && !strict) {\n            var buildTemplate = buildExportsModuleDeclaration;\n            if (this.opts.loose) buildTemplate = buildLooseExportsModuleDeclaration;\n            topNodes.unshift(buildTemplate());\n          }\n\n          path.unshiftContainer(\"body\", topNodes);\n          path.traverse(reassignmentVisitor, { remaps: remaps, scope: scope, exports: exports });\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}
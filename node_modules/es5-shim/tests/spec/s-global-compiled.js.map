{"version":3,"sources":["s-global.js"],"names":[],"mappings":"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","file":"s-global-compiled.js","sourcesContent":["/* global describe, it, xit, expect */\n\ndescribe('global methods', function () {\n    'use strict';\n\n    var foo = function foo() {};\n    var functionsHaveNames = foo.name === 'foo';\n    var ifFunctionsHaveNamesIt = functionsHaveNames ? it : xit;\n\n    var is = function (x, y) {\n        if (x === 0 && y === 0) {\n            return 1 / x === 1 / y;\n        }\n        return x === y;\n    };\n\n    describe('parseInt', function () {\n        /* eslint-disable radix */\n\n        ifFunctionsHaveNamesIt('has the right name', function () {\n          expect(parseInt.name).toBe('parseInt');\n        });\n\n        it('accepts a radix', function () {\n            for (var i = 2; i <= 36; ++i) {\n                expect(parseInt('10', i)).toBe(i);\n            }\n        });\n\n        it('defaults the radix to 10 when the number does not start with 0x or 0X', function () {\n           [\n               '01',\n               '08',\n               '10',\n               '42'\n           ].forEach(function (str) {\n               expect(parseInt(str)).toBe(parseInt(str, 10));\n           });\n        });\n\n        it('defaults the radix to 16 when the number starts with 0x or 0X', function () {\n            expect(parseInt('0x16')).toBe(parseInt('0x16', 16));\n            expect(parseInt('0X16')).toBe(parseInt('0X16', 16));\n        });\n\n        it('ignores leading whitespace', function () {\n            expect(parseInt('  0x16')).toBe(parseInt('0x16', 16));\n            expect(parseInt('  42')).toBe(parseInt('42', 10));\n            expect(parseInt('  08')).toBe(parseInt('08', 10));\n\n            var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n                '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n                '\\u2029\\uFEFF';\n            expect(parseInt(ws + '08')).toBe(parseInt('08', 10));\n            expect(parseInt(ws + '0x16')).toBe(parseInt('0x16', 16));\n        });\n\n        it('defaults the radix properly when not a true number', function () {\n            var fakeZero = { valueOf: function () { return 0; } };\n            expect(parseInt('08', fakeZero)).toBe(parseInt('08', 10));\n            expect(parseInt('0x16', fakeZero)).toBe(parseInt('0x16', 16));\n        });\n\n        it('allows sign-prefixed hex values', function () {\n            expect(parseInt('-0xF')).toBe(-15);\n            expect(parseInt('-0xF', 16)).toBe(-15);\n            expect(parseInt('+0xF')).toBe(15);\n            expect(parseInt('+0xF', 16)).toBe(15);\n        });\n        /* eslint-enable radix */\n    });\n\n    describe('parseFloat()', function () {\n        it('works with zeroes', function () {\n            expect(is(parseFloat('0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat(' 0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat('+0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat(' +0'), 0) ? '+0' : '-0').toBe('+0');\n            expect(is(parseFloat('-0'), -0) ? '-0' : '+0').toBe('-0');\n            expect(is(parseFloat(' -0'), -0) ? '-0' : '+0').toBe('-0');\n        });\n    });\n});\n"]}
{"version":3,"sources":["s-date.js"],"names":[],"mappings":"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","file":"s-date-compiled.js","sourcesContent":["/* global describe, it, xit, expect, beforeEach, jasmine */\n\ndescribe('Date', function () {\n    'use strict';\n\n    var supportsDescriptors = Object.defineProperty && (function () {\n        try {\n            var obj = {};\n            Object.defineProperty(obj, 'x', {\n                enumerable: false,\n                value: obj\n            });\n            for (var _ in obj) {\n                return false;\n            }\n            return obj.x === obj;\n        } catch (e) { /* this is ES3 */\n            return false;\n        }\n    }());\n    var ifSupportsDescriptorsIt = supportsDescriptors ? it : xit;\n    var has = Object.prototype.hasOwnProperty;\n\n    var negativeDate;\n    beforeEach(function () {\n        var negativeCanned = [\n            {\n                getTime: -3509827329600292,\n                getUTCDay: 4,\n                getDay: 4,\n                dim: 31\n            },\n            {\n                getTime: -3509824651200292,\n                getUTCDay: 0,\n                getDay: 0,\n                dim: 29\n            },\n            {\n                getTime: -3509822145600292,\n                getUTCDay: 1,\n                getDay: 1,\n                dim: 31\n            },\n            {\n                getTime: -3509819467200292,\n                getUTCDay: 4,\n                getDay: 4,\n                dim: 30\n            },\n            {\n                getTime: -3509816875200292,\n                getUTCDay: 6,\n                getDay: 6,\n                dim: 31\n            },\n            {\n                getTime: -3509814196800292,\n                getUTCDay: 2,\n                getDay: 2,\n                dim: 30\n            },\n            {\n                getTime: -3509811604800292,\n                getUTCDay: 4,\n                getDay: 4,\n                dim: 31\n            },\n            {\n                getTime: -3509808926400292,\n                getUTCDay: 0,\n                getDay: 0,\n                dim: 31\n            },\n            {\n                getTime: -3509806248000292,\n                getUTCDay: 3,\n                getDay: 3,\n                dim: 30\n            },\n            {\n                getTime: -3509803656000292,\n                getUTCDay: 5,\n                getDay: 5,\n                dim: 31\n            },\n            {\n                getTime: -3509800977600292,\n                getUTCDay: 1,\n                getDay: 1,\n                dim: 30\n            },\n            {\n                getTime: -3509798385600292,\n                getUTCDay: 3,\n                getDay: 3,\n                dim: 31\n            }\n        ];\n        negativeDate = negativeCanned.map(function (item) {\n            var dateFirst = new Date(item.getTime);\n            var dateLast = new Date(item.getTime + ((item.dim - 1) * 86400000));\n            return {\n                dates: [dateFirst, dateLast],\n                days: [1, item.dim],\n                getUTCDay: [item.getUTCDay, (item.getUTCDay + item.dim - 1) % 7],\n                getDay: [item.getDay, (item.getDay + item.dim - 1) % 7]\n            };\n        });\n    });\n\n    describe('.now()', function () {\n        it('should be the current time', function () {\n            var before = (new Date()).getTime();\n            var middle = Date.now();\n            var after = (new Date()).getTime();\n            expect(middle).not.toBeLessThan(before);\n            expect(middle).not.toBeGreaterThan(after);\n        });\n    });\n\n    describe('constructor', function () {\n        it('works with standard formats', function () {\n            //    Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1\n            expect(+new Date('2012-12-31T23:59:59.000Z')).toBe(1356998399000); //    1356998399000 1356998399000 1356998399000 1356998399000 1356998399000\n            expect(+new Date('2012-04-04T05:02:02.170Z')).toBe(1333515722170); //    1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T05:02:02.170999Z')).toBe(1333515722170); // 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T05:02:02.17Z')).toBe(1333515722170); //     1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T05:02:02.1Z')).toBe(1333515722100); //      1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n            expect(+new Date('2012-04-04T24:00:00.000Z')).toBe(1333584000000); //    NaN           1333584000000 1333584000000 1333584000000 1333584000000\n            expect(+new Date('2012-02-29T12:00:00.000Z')).toBe(1330516800000); //    1330516800000 1330516800000 1330516800000 1330516800000 1330516800000\n            expect(+new Date('2011-03-01T12:00:00.000Z')).toBe(1298980800000); //    1298980800000 1298980800000 1298980800000 1298980800000 1298980800000\n\n            // https://github.com/es-shims/es5-shim/issues/80 Safari bug with leap day\n            expect(new Date('2034-03-01T00:00:00.000Z') -\n                new Date('2034-02-27T23:59:59.999Z')).toBe(86400001); //          86400001      86400001      86400001      86400001             1\n\n        });\n\n        ifSupportsDescriptorsIt('is not enumerable', function () {\n            expect(Object.keys(new Date())).not.toContain('constructor');\n        });\n\n        it('works as a function', function () {\n            var zeroDate = Date(0);\n            expect(zeroDate).toBe(String(zeroDate));\n            var value = Date(1441705534578);\n            expect(value).toBe(String(value));\n        });\n\n        it('fixes this Safari 8/9 bug', function () {\n            var offset = new Date(1970).getTimezoneOffset() * 60e3;\n\n            var timestamp = 2147483647; // Math.pow(2, 31) - 1\n            var date = new Date(1970, 0, 1, 0, 0, 0, timestamp);\n            var expectedTimestamp = timestamp + offset;\n            expect(date.getTime()).toBe(expectedTimestamp);\n\n            var brokenTimestamp = 2147483648; // Math.pow(2, 31)\n            var brokenDate = new Date(1970, 0, 1, 0, 0, 0, brokenTimestamp);\n            var expectedBrokenTimestamp = brokenTimestamp + offset;\n            expect(brokenDate.getTime()).toBe(expectedBrokenTimestamp); // NaN in Safari 8/9\n\n            var veryBrokenTS = 1435734000000;\n            var veryBrokenDate = new Date(1970, 0, 1, 0, 0, 0, veryBrokenTS);\n            var largeDate = new Date('Wed Jul 01 2015 07:00:00 GMT-0700 (PDT)');\n            var expectedVeryBrokenTS = veryBrokenTS + (largeDate.getTimezoneOffset() * 60e3);\n            expect(veryBrokenDate.getTime()).toBe(expectedVeryBrokenTS); // NaN in Safari 8/9\n        });\n    });\n\n    describe('.parse()', function () {\n        // TODO: Write the rest of the test.\n\n        ifSupportsDescriptorsIt('is not enumerable', function () {\n            expect(Object.getOwnPropertyDescriptor(Date, 'parse').enumerable).toBe(false);\n        });\n\n        it('should be an invalid date', function () {\n            //            Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1\n            expect(Date.parse('2012-11-31T23:59:59.000Z')).toBeFalsy(); //            1354406399000 NaN           NaN           1354406399000 NaN\n            expect(Date.parse('2012-12-31T23:59:60.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           1356998400000\n            expect(Date.parse('2012-04-04T24:00:00.500Z')).toBeFalsy(); //            NaN           NaN           1333584000500 1333584000500 NaN\n            expect(Date.parse('2012-12-31T10:08:60.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           1356948540000\n            expect(Date.parse('2012-13-01T12:00:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-32T12:00:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-31T25:00:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-31T24:01:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           1356998460000 NaN\n            expect(Date.parse('2012-12-31T12:60:00.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-31T12:00:60.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           1356955260000\n            expect(Date.parse('2012-00-31T23:59:59.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2012-12-00T23:59:59.000Z')).toBeFalsy(); //            NaN           NaN           NaN           NaN           NaN\n            expect(Date.parse('2011-02-29T12:00:00.000Z')).toBeFalsy(); //            1298980800000 NaN           NaN           1298980800000 NaN\n        });\n\n        it('should work', function () {\n            var dates = {\n                //    Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1  Safari 8\n                '2012-12-31T23:59:59.000Z': 1356998399000, //    1356998399000 1356998399000 1356998399000 1356998399000 1356998399000 1356998399000\n                '2012-04-04T05:02:02.170Z': 1333515722170, //    1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n                '2012-04-04T05:02:02.170999Z': 1333515722170, // 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170.999\n                '2012-04-04T05:02:02.17Z': 1333515722170, //     1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n                '2012-04-04T05:02:02.1Z': 1333515722100, //      1333515722170 1333515722170 1333515722170 1333515722170 1333515722170 1333515722170\n                '2012-04-04T24:00:00.000Z': 1333584000000, //    NaN           1333584000000 1333584000000 1333584000000 1333584000000 1333584000000\n                '2012-02-29T12:00:00.000Z': 1330516800000, //    1330516800000 1330516800000 1330516800000 1330516800000 1330516800000 1330516800000\n                '2011-03-01T12:00:00.000Z': 1298980800000 //     1298980800000 1298980800000 1298980800000 1298980800000 1298980800000 1298980800000\n            };\n            for (var str in dates) {\n                if (has.call(dates, str)) {\n                    expect(Math.floor(Date.parse(str))).toBe(dates[str]);\n                }\n            }\n\n            // https://github.com/es-shims/es5-shim/issues/80 Safari bug with leap day\n            expect(Date.parse('2034-03-01T00:00:00.000Z') -\n                Date.parse('2034-02-27T23:59:59.999Z')).toBe(86400001); //         86400001      86400001      86400001      86400001             1\n\n        });\n\n        it('fixes a Safari 8/9 bug with parsing in UTC instead of local time', function () {\n            var offset = new Date('2015-07-01').getTimezoneOffset() * 60e3;\n            expect(Date.parse('2015-07-01T00:00:00')).toBe(1435708800000 + offset); // Safari 8/9 give NaN\n        });\n\n        it('should support extended years', function () {\n            //    Chrome 19     Opera 12      Firefox 11    IE 9          Safari 5.1.1\n            expect(Date.parse('0000-01-01T00:00:00.000Z')).toBe(-621672192e5); //   -621672192e5  -621672192e5  -621672192e5  -621672192e5  -621672192e5\n            expect(Date.parse('0001-01-01T00:00:00Z')).toBe(-621355968e5); //       -621355968e5  -621355968e5  -621355968e5   8.64e15      -621355968e5\n            expect(Date.parse('+275760-09-13T00:00:00.000Z')).toBe(8.64e15); //      8.64e15       NaN           8.64e15       8.64e15       8.64e15\n            expect(Date.parse('-271821-04-20T00:00:00.000Z')).toBe(-8.64e15); //    -8.64e15       NaN          -8.64e15      -8.64e15      -8.6400000864e15\n            expect(Date.parse('+275760-09-13T00:00:00.001Z')).toBeFalsy(); //        NaN           NaN           NaN           8.64e15 + 1   8.64e15 + 1\n            expect(Date.parse('-271821-04-19T23:59:59.999Z')).toBeFalsy(); //        NaN           NaN           NaN          -8.64e15 - 1  -8.6400000864e15 - 1\n            expect(Date.parse('+033658-09-27T01:46:40.000Z')).toBe(1e15); //         1e15          NaN           1e15          1e15          9999999136e5\n            expect(Date.parse('-000001-01-01T00:00:00Z')).toBe(-621987552e5); //    -621987552e5   NaN          -621987552e5  -621987552e5  -621987552e5\n            expect(Date.parse('+002009-12-15T00:00:00Z')).toBe(12608352e5); //       12608352e5    NaN           12608352e5    12608352e5    12608352e5\n        });\n\n        it('works with timezone offsets', function () {\n            //  Chrome 19   Opera 12     Firefox 11   IE 9             Safari 5.1.1\n            expect(Date.parse('2012-01-29T12:00:00.000+01:00')).toBe(132783480e4); //  132783480e4 132783480e4  132783480e4  132783480e4      132783480e4\n            expect(Date.parse('2012-01-29T12:00:00.000-00:00')).toBe(132783840e4); //  132783840e4 132783840e4  132783840e4  132783840e4      132783840e4\n            expect(Date.parse('2012-01-29T12:00:00.000+00:00')).toBe(132783840e4); //  132783840e4 132783840e4  132783840e4  132783840e4      132783840e4\n            expect(Date.parse('2012-01-29T12:00:00.000+23:59')).toBe(132775206e4); //  132775206e4 132775206e4  132775206e4  132775206e4      132775206e4\n            expect(Date.parse('2012-01-29T12:00:00.000-23:59')).toBe(132792474e4); //  132792474e4 132792474e4  132792474e4  132792474e4      132792474e4\n            expect(Date.parse('2012-01-29T12:00:00.000+24:00')).toBeFalsy(); //        NaN         1327752e6    NaN          1327752000000    1327752000000\n            expect(Date.parse('2012-01-29T12:00:00.000+24:01')).toBeFalsy(); //        NaN         NaN          NaN          1327751940000    1327751940000\n            expect(Date.parse('2012-01-29T12:00:00.000+24:59')).toBeFalsy(); //        NaN         NaN          NaN          1327748460000    1327748460000\n            expect(Date.parse('2012-01-29T12:00:00.000+25:00')).toBeFalsy(); //        NaN         NaN          NaN          NaN              NaN\n            expect(Date.parse('2012-01-29T12:00:00.000+00:60')).toBeFalsy(); //        NaN         NaN          NaN          NaN              NaN\n            expect(Date.parse('-271821-04-20T00:00:00.000+00:01')).toBeFalsy(); //     NaN         NaN          NaN         -864000000006e4 -864000008646e4\n            expect(Date.parse('-271821-04-20T00:01:00.000+00:01')).toBe(-8.64e15); // -8.64e15     NaN         -8.64e15     -8.64e15        -864000008640e4\n\n            // When time zone is missed, local offset should be used (ES 5.1 bug)\n            // see https://bugs.ecmascript.org/show_bug.cgi?id=112\n            var tzOffset = Number(new Date(1970, 0));\n            // same as (new Date().getTimezoneOffset() * 60000)\n            expect(Date.parse('1970-01-01T00:00:00')).toBe(tzOffset); //              tzOffset    0            0            0               NaN\n        });\n\n        it('should be able to coerce to a number', function () {\n            var actual = Number(new Date(1970, 0));\n            var expected = parseInt(actual, 10);\n            expect(actual).toBeDefined();\n            expect(actual).toBe(expected);\n            expect(isNaN(actual)).toBeFalsy();\n        });\n\n    });\n\n    describe('#toString()', function () {\n        var actual;\n\n        beforeEach(function () {\n            actual = (new Date(1970, 0)).toString();\n        });\n\n        it('should show correct date info for ' + actual, function () {\n            expect(actual).toMatch(/1970/);\n            expect(actual).toMatch(/jan/i);\n            expect(actual).toMatch(/thu/i);\n            expect(actual).toMatch(/00:00:00/);\n        });\n    });\n\n    describe('#valueOf()', function () {\n        // Note that new Date(1970, 0).valueOf() is 0 in UTC timezone.\n        // Check check that it's a number (and an int), not that it's \"truthy\".\n        var actual;\n\n        beforeEach(function () {\n            actual = (new Date(1970, 0)).valueOf();\n        });\n        it('should give a numeric value', function () {\n            expect(typeof actual).toBe('number');\n        });\n        it('should not be NaN', function () {\n            expect(isNaN(actual)).toBe(false);\n        });\n        it('should give an int value', function () {\n            expect(actual).toBe(Math.floor(actual));\n        });\n    });\n\n    describe('#getUTCDate()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getUTCDate()).toBe(item.days[index], date);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCDay()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getUTCDay()).toBe(item.getUTCDay[index]);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCFullYear()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCFullYear()).toBe(-109252);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCMonth()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item, index) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCMonth()).toBe(index);\n                });\n            });\n        });\n\n        it('should return correct values', function () {\n            expect(new Date(8.64e15).getUTCMonth()).toBe(8);\n            expect(new Date(0).getUTCMonth()).toBe(0);\n        });\n    });\n\n    describe('#getUTCHours()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCHours()).toBe(11);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCMinutes()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCMinutes()).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCSeconds()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCSeconds()).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getUTCMilliseconds()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getUTCMilliseconds()).toBe(708);\n                });\n            });\n        });\n    });\n\n    describe('#getDate()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getDate()).toBe(item.days[index]);\n                });\n            });\n        });\n    });\n\n    describe('#getDay()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date, index) {\n                    expect(date.getDay()).toBe(item.getDay[index]);\n                });\n            });\n        });\n    });\n\n    describe('#getFullYear()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getFullYear()).toBe(-109252);\n                });\n            });\n        });\n    });\n\n    describe('#getMonth()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item, index) {\n                item.dates.forEach(function (date) {\n                    expect(date.getMonth()).toBe(index);\n                });\n            });\n        });\n    });\n\n    describe('#getHours()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getHours() + Math.floor(date.getTimezoneOffset() / 60)).toBe(11);\n                });\n            });\n        });\n    });\n\n    describe('#getMinutes()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    var off = date.getTimezoneOffset();\n                    var offHours = Math.floor(off / 60);\n                    var offMins = off - offHours * 60;\n                    expect(date.getMinutes() + offMins).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getSeconds()', function () {\n        it('should return the right value for negative dates', function () {\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getSeconds()).toBe(59);\n                });\n            });\n        });\n    });\n\n    describe('#getMilliseconds()', function () {\n        it('should return the right value for negative dates', function () {\n            // Opera 10.6/11.61/Opera 12 bug\n            negativeDate.forEach(function (item) {\n                item.dates.forEach(function (date) {\n                    expect(date.getMilliseconds()).toBe(708);\n                });\n            });\n        });\n    });\n\n    describe('#toISOString()', function () {\n        // TODO: write the rest of the test.\n\n        it('should support extended years', function () {\n            expect(new Date(-62198755200000).toISOString().indexOf('-000001-01-01')).toBe(0);\n            expect(new Date(8.64e15).toISOString().indexOf('+275760-09-13')).toBe(0);\n        });\n\n        it('should return correct dates', function () {\n            expect(new Date(-1).toISOString()).toBe('1969-12-31T23:59:59.999Z'); // Safari 5.1.5 \"1969-12-31T23:59:59.-01Z\"\n            negativeDate.forEach(function (item, index) {\n                var m = index + 1;\n                item.dates.forEach(function (date, idx) {\n                    var d = item.days[idx];\n                    expect(date.toISOString()).toBe('-109252-' + (m < 10 ? '0' + m : m) + '-' + (d < 10 ? '0' + d : d) + 'T11:59:59.708Z'); // Opera 11.61/Opera 12 bug with Date#getUTCMonth\n                });\n            });\n        });\n\n    });\n\n    describe('#toUTCString()', function () {\n        it('should return correct dates', function () {\n            expect(new Date(-1509842289600292).toUTCString()).toBe('Mon, 01 Jan -45875 11:59:59 GMT');\n        });\n    });\n\n    describe('#toDateString()', function () {\n        it('should return correct dates', function () {\n            expect(new Date(-1509842289600292).toDateString()).toBe('Mon Jan 01 -45875');\n        });\n    });\n\n    describe('#toString()', function () {\n        it('should return correct dates', function () {\n            var actual = new Date(1449662400000).toString();\n            var re = /^Wed Dec 09 2015 \\d\\d:\\d\\d:\\d\\d GMT[-\\+]\\d\\d\\d\\d(?: |$)/;\n            expect(re.test(actual)).toBe(true, actual);\n        });\n    });\n\n    describe('#toJSON()', function () {\n\n        // Opera 11.6x/12 bug\n        it('should call toISOString', function () {\n            var date = new Date(0);\n            date.toISOString = function () {\n                return 1;\n            };\n            expect(date.toJSON()).toBe(1);\n        });\n\n        it('should return null for not finite dates', function () {\n            var date = new Date(NaN),\n                json;\n            try {\n                json = date.toJSON();\n            } catch (e) {\n                /* invalid json */\n                expect(e).not.toEqual(jasmine.any(Error));\n            }\n            expect(json).toBe(null);\n        });\n\n        it('should return the isoString when stringified', function () {\n            var date = new Date();\n            expect(JSON.stringify(date.toISOString())).toBe(JSON.stringify(date));\n        });\n    });\n\n});\n"]}
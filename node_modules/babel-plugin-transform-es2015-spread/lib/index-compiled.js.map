{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nexports.__esModule = true;\n\nexports[\"default\"] = function (_ref2) {\n  var t = _ref2.types;\n\n  function getSpreadLiteral(spread, scope, state) {\n    if (state.opts.loose && !t.isIdentifier(spread.argument, { name: \"arguments\" })) {\n      return spread.argument;\n    } else {\n      return scope.toArray(spread.argument, true);\n    }\n  }\n\n  function hasSpread(nodes) {\n    for (var i = 0; i < nodes.length; i++) {\n      if (t.isSpreadElement(nodes[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function build(props /*: Array*/, scope, state) {\n    var nodes = [];\n\n    var _props = [];\n\n    function push() {\n      if (!_props.length) return;\n      nodes.push(t.arrayExpression(_props));\n      _props = [];\n    }\n\n    for (var _iterator = props, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var prop = _ref;\n\n      if (t.isSpreadElement(prop)) {\n        push();\n        nodes.push(getSpreadLiteral(prop, scope, state));\n      } else {\n        _props.push(prop);\n      }\n    }\n\n    push();\n\n    return nodes;\n  }\n\n  return {\n    visitor: {\n      ArrayExpression: function ArrayExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n\n        var elements = node.elements;\n        if (!hasSpread(elements)) return;\n\n        var nodes = build(elements, scope, state);\n        var first = nodes.shift();\n\n        if (!t.isArrayExpression(first)) {\n          nodes.unshift(first);\n          first = t.arrayExpression([]);\n        }\n\n        path.replaceWith(t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes));\n      },\n\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n\n        var args = node.arguments;\n        if (!hasSpread(args)) return;\n\n        var calleePath = path.get(\"callee\");\n        if (calleePath.isSuper()) return;\n\n        var contextLiteral = t.identifier(\"undefined\");\n\n        node.arguments = [];\n\n        var nodes = undefined;\n        if (args.length === 1 && args[0].argument.name === \"arguments\") {\n          nodes = [args[0].argument];\n        } else {\n          nodes = build(args, scope, state);\n        }\n\n        var first = nodes.shift();\n        if (nodes.length) {\n          node.arguments.push(t.callExpression(t.memberExpression(first, t.identifier(\"concat\")), nodes));\n        } else {\n          node.arguments.push(first);\n        }\n\n        var callee = node.callee;\n\n        if (calleePath.isMemberExpression()) {\n          var temp = scope.maybeGenerateMemoised(callee.object);\n          if (temp) {\n            callee.object = t.assignmentExpression(\"=\", temp, callee.object);\n            contextLiteral = temp;\n          } else {\n            contextLiteral = callee.object;\n          }\n          t.appendToMemberExpression(callee, t.identifier(\"apply\"));\n        } else {\n          node.callee = t.memberExpression(node.callee, t.identifier(\"apply\"));\n        }\n\n        node.arguments.unshift(contextLiteral);\n      },\n\n      NewExpression: function NewExpression(path, state) {\n        var node = path.node;\n        var scope = path.scope;\n\n        var args = node.arguments;\n        if (!hasSpread(args)) return;\n\n        var nodes = build(args, scope, state);\n\n        var context = t.arrayExpression([t.nullLiteral()]);\n\n        args = t.callExpression(t.memberExpression(context, t.identifier(\"concat\")), nodes);\n\n        path.replaceWith(t.newExpression(t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Function\"), t.identifier(\"prototype\")), t.identifier(\"bind\")), t.identifier(\"apply\")), [node.callee, args]), []));\n      }\n    }\n  };\n};\n\nmodule.exports = exports[\"default\"];"]}
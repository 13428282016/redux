{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _esutils = require(\"esutils\");\n\nvar _esutils2 = _interopRequireDefault(_esutils);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\n/*:: type ElementState = {\n  tagExpr: Object; // tag node\n  tagName: string; // raw string tag name\n  args: Array<Object>; // array of call arguments\n  call?: Object; // optional call property that can be set to override the call expression returned\n  pre?: Function; // function called with (state: ElementState) before building attribs\n  post?: Function; // function called with (state: ElementState) after building attribs\n};*/ // function called with (state: ElementState) after building attribs\n\nexports[\"default\"] = function (opts) {\n  var visitor = {};\n\n  visitor.JSXNamespacedName = function (path) {\n    throw path.buildCodeFrameError(\"Namespace tags are not supported. ReactJSX is not XML.\");\n  };\n\n  visitor.JSXElement = {\n    exit: function exit(path, file) {\n      var callExpr = buildElementCall(path.get(\"openingElement\"), file);\n\n      callExpr.arguments = callExpr.arguments.concat(path.node.children);\n\n      if (callExpr.arguments.length >= 3) {\n        callExpr._prettyCall = true;\n      }\n\n      path.replaceWith(t.inherits(callExpr, path.node));\n    }\n  };\n\n  return visitor;\n\n  function convertJSXIdentifier(node, parent) {\n    if (t.isJSXIdentifier(node)) {\n      if (node.name === \"this\" && t.isReferenced(node, parent)) {\n        return t.thisExpression();\n      } else if (_esutils2[\"default\"].keyword.isIdentifierNameES6(node.name)) {\n        node.type = \"Identifier\";\n      } else {\n        return t.stringLiteral(node.name);\n      }\n    } else if (t.isJSXMemberExpression(node)) {\n      return t.memberExpression(convertJSXIdentifier(node.object, node), convertJSXIdentifier(node.property, node));\n    }\n\n    return node;\n  }\n\n  function convertAttributeValue(node) {\n    if (t.isJSXExpressionContainer(node)) {\n      return node.expression;\n    } else {\n      return node;\n    }\n  }\n\n  function convertAttribute(node) {\n    var value = convertAttributeValue(node.value || t.booleanLiteral(true));\n\n    if (t.isStringLiteral(value)) {\n      value.value = value.value.replace(/\\n\\s+/g, \" \");\n    }\n\n    if (t.isValidIdentifier(node.name.name)) {\n      node.name.type = \"Identifier\";\n    } else {\n      node.name = t.stringLiteral(node.name.name);\n    }\n\n    return t.inherits(t.objectProperty(node.name, value), node);\n  }\n\n  function buildElementCall(path, file) {\n    path.parent.children = t.react.buildChildren(path.parent);\n\n    var tagExpr = convertJSXIdentifier(path.node.name, path.node);\n    var args = [];\n\n    var tagName = undefined;\n    if (t.isIdentifier(tagExpr)) {\n      tagName = tagExpr.name;\n    } else if (t.isLiteral(tagExpr)) {\n      tagName = tagExpr.value;\n    }\n\n    var state /*: ElementState*/ = {\n      tagExpr: tagExpr,\n      tagName: tagName,\n      args: args\n    };\n\n    if (opts.pre) {\n      opts.pre(state, file);\n    }\n\n    var attribs = path.node.attributes;\n    if (attribs.length) {\n      attribs = buildOpeningElementAttributes(attribs, file);\n    } else {\n      attribs = t.nullLiteral();\n    }\n\n    args.push(attribs);\n\n    if (opts.post) {\n      opts.post(state, file);\n    }\n\n    return state.call || t.callExpression(state.callee, args);\n  }\n\n  /**\n   * The logic for this is quite terse. It's because we need to\n   * support spread elements. We loop over all attributes,\n   * breaking on spreads, we then push a new object containg\n   * all prior attributes to an array for later processing.\n   */\n\n  function buildOpeningElementAttributes(attribs, file) {\n    var _props = [];\n    var objs = [];\n\n    function pushProps() {\n      if (!_props.length) return;\n\n      objs.push(t.objectExpression(_props));\n      _props = [];\n    }\n\n    while (attribs.length) {\n      var prop = attribs.shift();\n      if (t.isJSXSpreadAttribute(prop)) {\n        pushProps();\n        objs.push(prop.argument);\n      } else {\n        _props.push(convertAttribute(prop));\n      }\n    }\n\n    pushProps();\n\n    if (objs.length === 1) {\n      // only one object\n      attribs = objs[0];\n    } else {\n      // looks like we have multiple objects\n      if (!t.isObjectExpression(objs[0])) {\n        objs.unshift(t.objectExpression([]));\n      }\n\n      // spread it\n      attribs = t.callExpression(file.addHelper(\"extends\"), objs);\n    }\n\n    return attribs;\n  }\n};\n\nmodule.exports = exports[\"default\"];\n// tag node\n// raw string tag name\n// array of call arguments\n// optional call property that can be set to override the call expression returned\n// function called with (state: ElementState) before building attribs"]}
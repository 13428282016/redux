{"version":3,"sources":["rest.js"],"names":[],"mappings":"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","file":"rest-compiled.js","sourcesContent":["\"use strict\";\n\nvar _getIterator = require(\"babel-runtime/core-js/get-iterator\")[\"default\"];\n\nvar _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nexports.__esModule = true;\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar buildRest = _babelTemplate2[\"default\"](\"\\n  for (var LEN = ARGUMENTS.length,\\n           ARRAY = Array(ARRAY_LEN),\\n           KEY = START;\\n       KEY < LEN;\\n       KEY++) {\\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\\n  }\\n\");\n\nvar loadRest = _babelTemplate2[\"default\"](\"\\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\\n\");\n\nvar memberExpressionOptimisationVisitor = {\n  Scope: function Scope(path, state) {\n    // check if this scope has a local binding that will shadow the rest parameter\n    if (!path.scope.bindingIdentifierEquals(state.name, state.outerBinding)) {\n      path.skip();\n    }\n  },\n\n  Flow: function Flow(path) {\n    // don't touch reference in type annotations\n    path.skip();\n  },\n\n  Function: function Function(path, state) {\n    // Detect whether any reference to rest is contained in nested functions to\n    // determine if deopt is necessary.\n    var oldNoOptimise = state.noOptimise;\n    state.noOptimise = true;\n    path.traverse(memberExpressionOptimisationVisitor, state);\n    state.noOptimise = oldNoOptimise;\n\n    // Skip because optimizing references to rest would refer to the `arguments`\n    // of the nested function.\n    path.skip();\n  },\n\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var node = path.node;\n\n    // we can't guarantee the purity of arguments\n    if (node.name === \"arguments\") {\n      state.deopted = true;\n    }\n\n    // is this a referenced identifier and is it referencing the rest parameter?\n    if (node.name !== state.name) return;\n\n    if (state.noOptimise) {\n      state.deopted = true;\n    } else {\n      var parentPath = path.parentPath;\n\n      // ex: args[0]\n      if (parentPath.isMemberExpression({ computed: true, object: node })) {\n        // if we know that this member expression is referencing a number then\n        // we can safely optimise it\n        var prop = parentPath.get(\"property\");\n        if (prop.isBaseType(\"number\")) {\n          state.candidates.push({ cause: \"indexGetter\", path: path });\n          return;\n        }\n      }\n\n      // ex: args.length\n      if (parentPath.isMemberExpression({ computed: false, object: node })) {\n        var prop = parentPath.get(\"property\");\n        if (prop.node.name === \"length\") {\n          state.candidates.push({ cause: \"lengthGetter\", path: path });\n          return;\n        }\n      }\n\n      // we can only do these optimizations if the rest variable would match\n      // the arguments exactly\n      // optimise single spread args in calls\n      // ex: fn(...args)\n      if (state.offset === 0 && parentPath.isSpreadElement()) {\n        var call = parentPath.parentPath;\n        if (call.isCallExpression() && call.node.arguments.length === 1) {\n          state.candidates.push({ cause: \"argSpread\", path: path });\n          return;\n        }\n      }\n\n      state.references.push(path);\n    }\n  },\n\n  /**\n   * Deopt on use of a binding identifier with the same name as our rest param.\n   *\n   * See https://github.com/babel/babel/issues/2091\n   */\n\n  BindingIdentifier: function BindingIdentifier(_ref2, state) {\n    var node = _ref2.node;\n\n    if (node.name === state.name) {\n      state.deopted = true;\n    }\n  }\n};\nfunction hasRest(node) {\n  return t.isRestElement(node.params[node.params.length - 1]);\n}\n\nfunction optimiseIndexGetter(path, argsId, offset) {\n  var index = undefined;\n\n  if (t.isNumericLiteral(path.parent.property)) {\n    index = t.numericLiteral(path.parent.property.value + offset);\n  } else {\n    index = t.binaryExpression(\"+\", path.parent.property, t.numericLiteral(offset));\n  }\n\n  path.parentPath.replaceWith(loadRest({\n    ARGUMENTS: argsId,\n    INDEX: index\n  }));\n}\n\nfunction optimiseLengthGetter(path, argsLengthExpression, argsId, offset) {\n  if (offset) {\n    path.parentPath.replaceWith(t.binaryExpression(\"-\", argsLengthExpression, t.numericLiteral(offset)));\n  } else {\n    path.replaceWith(argsId);\n  }\n}\n\nvar visitor = {\n  Function: function Function(path) {\n    var node = path.node;\n    var scope = path.scope;\n\n    if (!hasRest(node)) return;\n\n    var rest = node.params.pop().argument;\n\n    var argsId = t.identifier(\"arguments\");\n    var argsLengthExpression = t.memberExpression(argsId, t.identifier(\"length\"));\n\n    // otherwise `arguments` will be remapped in arrow functions\n    argsId._shadowedFunctionLiteral = path;\n\n    // check and optimise for extremely common cases\n    var state = {\n      references: [],\n      offset: node.params.length,\n\n      argumentsNode: argsId,\n      outerBinding: scope.getBindingIdentifier(rest.name),\n\n      // candidate member expressions we could optimise if there are no other references\n      candidates: [],\n\n      // local rest binding name\n      name: rest.name,\n\n      /*\n      It may be possible to optimize the output code in certain ways, such as\n      not generating code to initialize an array (perhaps substituting direct\n      references to arguments[i] or arguments.length for reads of the\n      corresponding rest parameter property) or positioning the initialization\n      code so that it may not have to execute depending on runtime conditions.\n       This property tracks eligibility for optimization. \"deopted\" means give up\n      and don't perform optimization. For example, when any of rest's elements /\n      properties is assigned to at the top level, or referenced at all in a\n      nested function.\n      */\n      deopted: false\n    };\n\n    path.traverse(memberExpressionOptimisationVisitor, state);\n\n    // There are only \"shorthand\" references\n    if (!state.deopted && !state.references.length) {\n      for (var _iterator = (state.candidates /*: Array*/), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _path = _ref.path;\n        var cause = _ref.cause;\n\n        switch (cause) {\n          case \"indexGetter\":\n            optimiseIndexGetter(_path, argsId, state.offset);\n            break;\n          case \"lengthGetter\":\n            optimiseLengthGetter(_path, argsLengthExpression, argsId, state.offset);\n            break;\n          default:\n            _path.replaceWith(argsId);\n        }\n      }\n      return;\n    }\n\n    state.references = state.references.concat(state.candidates.map(function (_ref3) {\n      var path = _ref3.path;\n      return path;\n    }));\n\n    // deopt shadowed functions as transforms like regenerator may try touch the allocation loop\n    state.deopted = state.deopted || !!node.shadow;\n\n    var start = t.numericLiteral(node.params.length);\n    var key = scope.generateUidIdentifier(\"key\");\n    var len = scope.generateUidIdentifier(\"len\");\n\n    var arrKey = key;\n    var arrLen = len;\n    if (node.params.length) {\n      // this method has additional params, so we need to subtract\n      // the index of the current argument position from the\n      // position in the array that we want to populate\n      arrKey = t.binaryExpression(\"-\", key, start);\n\n      // we need to work out the size of the array that we're\n      // going to store all the rest parameters\n      //\n      // we need to add a check to avoid constructing the array\n      // with <0 if there are less arguments than params as it'll\n      // cause an error\n      arrLen = t.conditionalExpression(t.binaryExpression(\">\", len, start), t.binaryExpression(\"-\", len, start), t.numericLiteral(0));\n    }\n\n    var loop = buildRest({\n      ARGUMENTS: argsId,\n      ARRAY_KEY: arrKey,\n      ARRAY_LEN: arrLen,\n      START: start,\n      ARRAY: rest,\n      KEY: key,\n      LEN: len\n    });\n\n    if (state.deopted) {\n      loop._blockHoist = node.params.length + 1;\n      node.body.body.unshift(loop);\n    } else {\n      // perform allocation at the lowest common ancestor of all references\n      loop._blockHoist = 1;\n\n      var target = path.getEarliestCommonAncestorFrom(state.references).getStatementParent();\n\n      // don't perform the allocation inside a loop\n      target.findParent(function (path) {\n        if (path.isLoop()) {\n          target = path;\n        } else {\n          // Stop crawling up if this is a function.\n          return path.isFunction();\n        }\n      });\n\n      target.insertBefore(loop);\n    }\n  }\n};\nexports.visitor = visitor;"]}
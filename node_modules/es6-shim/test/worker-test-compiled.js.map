{"version":3,"sources":["worker-test.js"],"names":[],"mappings":";;AAEA,QAAQ,CAAC,QAAQ,EAAE,YAAY;AAC7B,MAAI,uBAAuB,GAAG,UAAU,UAAU,EAAE;AAClD,QAAI,SAAS,GAAG,iBAAiB,CAAC;AAClC,QAAI,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE;AACrC,eAAS,IAAI,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC;KACxC;AACD,QAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;AACnC,eAAS,IAAI,GAAG,GAAG,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC;KAC5C;AACD,QAAI,UAAU,CAAC,OAAO,KAAK,SAAS,EAAE;AACpC,eAAS,IAAI,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC;KACxC;AACD,WAAO,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;GAC7B,CAAC;AACF,MAAI,gCAAgC,GAAG,YAAY;AACjD,QAAI,uBAAuB,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;AAC5D,QAAI,sBAAsB,GAAG,OAAO,QAAQ,KAAK,WAAW,CAAC;AAC7D,QAAI,sBAAsB,GAAG,sBAAsB,IAAI,QAAQ,CAAC,QAAQ,KAAK,OAAO;;;;;;AAAC,AAMrF,WAAO,uBAAuB,IAAI,CAAC,sBAAsB,CAAC;GAC3D,CAAC;;AAEF,MAAI,gCAAgC,EAAE,EAAE;AACtC,MAAE,CAAC,qBAAqB,EAAE,UAAU,IAAI,EAAE;AACxC,UAAI,MAAM,GAAG,IAAI,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAClD,YAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,UAAU,EAAE;AAAE,cAAM,uBAAuB,CAAC,UAAU,CAAC,CAAC;OAAE,CAAC,CAAC;AACvG,YAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,YAAY,EAAE;AACzD,cAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC1C,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ;CACF,CAAC,CAAC","file":"worker-test-compiled.js","sourcesContent":["/* global describe, it, expect, Worker, location */\n\ndescribe('Worker', function () {\n  var workerErrorEventToError = function (errorEvent) {\n    var errorText = 'Error in Worker';\n    if (errorEvent.filename !== undefined) {\n      errorText += ' ' + errorEvent.filename;\n    }\n    if (errorEvent.lineno !== undefined) {\n      errorText += '(' + errorEvent.lineno + ')';\n    }\n    if (errorEvent.message !== undefined) {\n      errorText += ': ' + errorEvent.message;\n    }\n    return new Error(errorText);\n  };\n  var canRunWorkerTestInCurrentContext = function () {\n    var workerConstructorExists = typeof Worker !== 'undefined';\n    var locationPropertyExists = typeof location !== 'undefined';\n    var runningOnFileUriScheme = locationPropertyExists && location.protocol === 'file:';\n\n    // The Worker constructor doesn't exist in some older browsers nor does it exist in non-browser contexts like Node.\n    // Additionally some browsers (at least Chrome) don't allow Workers over file URIs.\n    // To prevent false negative test failures in the cases where Workers are unavailable for either of those reasons\n    // we skip this test.\n    return workerConstructorExists && !runningOnFileUriScheme;\n  };\n\n  if (canRunWorkerTestInCurrentContext()) {\n    it('can import es6-shim', function (done) {\n      var worker = new Worker('worker-runner.workerjs');\n      worker.addEventListener('error', function (errorEvent) { throw workerErrorEventToError(errorEvent); });\n      worker.addEventListener('message', function (messageEvent) {\n        expect(messageEvent.data).to.eql('ready');\n        done();\n      });\n    });\n  }\n});\n"]}
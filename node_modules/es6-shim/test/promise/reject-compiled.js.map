{"version":3,"sources":["reject.js"],"names":[],"mappings":";;AAEA,IAAI,YAAY,GAAG,UAAU,IAAI,EAAE;AACjC,cAAY,CAAC;;AAEb,SAAO,UAAU,CAAC,EAAE;AAAE,QAAI,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC,CAAC;GAAE,CAAC;CACjD,CAAC;;AAEF,QAAQ,CAAC,gBAAgB,EAAE,YAAY;AACrC,cAAY,CAAC;;AAEb,IAAE,CAAC,0BAA0B,EAAE,YAAY;AACzC,UAAM,CAAC,OAAO,CAAC,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;GACvF,CAAC,CAAC;;AAEH,IAAE,CAAC,kCAAkC,EAAE,UAAU,IAAI,EAAE;AACrD,QAAI,KAAK,GAAG,EAAE,CAAC;AACf,WAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,UAAU,MAAM,EAAE;AAC/D,YAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/B,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,IAAE,CAAC,qCAAqC,EAAE,YAAY;AACpD,QAAI,OAAO,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC/B,UAAM,CAAC,YAAY;AAAE,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;AAC/E,UAAM,CAAC,YAAY;AAAE,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;AAC1E,UAAM,CAAC,YAAY;AAAE,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;AACxE,UAAM,CAAC,YAAY;AAAE,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;AACxE,UAAM,CAAC,YAAY;AAAE,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;AAC3E,UAAM,CAAC,YAAY;AAAE,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;GAC3E,CAAC,CAAC;CACJ,CAAC,CAAC","file":"reject-compiled.js","sourcesContent":["/* global describe, it, expect, setTimeout, Promise */\n\nvar failIfThrows = function (done) {\n  'use strict';\n\n  return function (e) { done(e || new Error()); };\n};\n\ndescribe('Promise.reject', function () {\n  'use strict';\n\n  it('should not be enumerable', function () {\n    expect(Promise).ownPropertyDescriptor('reject').to.have.property('enumerable', false);\n  });\n\n  it('should return a rejected promise', function (done) {\n    var value = {};\n    Promise.reject(value).then(failIfThrows(done), function (result) {\n      expect(result).to.equal(value);\n      done();\n    });\n  });\n\n  it('throws when receiver is a primitive', function () {\n    var promise = Promise.reject();\n    expect(function () { Promise.reject.call(undefined, promise); }).to['throw']();\n    expect(function () { Promise.reject.call(null, promise); }).to['throw']();\n    expect(function () { Promise.reject.call('', promise); }).to['throw']();\n    expect(function () { Promise.reject.call(42, promise); }).to['throw']();\n    expect(function () { Promise.reject.call(false, promise); }).to['throw']();\n    expect(function () { Promise.reject.call(true, promise); }).to['throw']();\n  });\n});\n"]}
{"version":3,"sources":["race.js"],"names":[],"mappings":"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","file":"race-compiled.js","sourcesContent":["/* global describe, it, expect, setTimeout, assert, Promise */\n\nvar failIfThrows = function (done) {\n  'use strict';\n\n  return function (e) { done(e || new Error()); };\n};\n\nvar delayPromise = function (value, ms) {\n  'use strict';\n\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve(value);\n    }, ms);\n  });\n};\n\ndescribe('Promise.race', function () {\n  'use strict';\n\n  it('should not be enumerable', function () {\n    expect(Promise).ownPropertyDescriptor('race').to.have.property('enumerable', false);\n  });\n\n  it('should fulfill if all promises are settled and the ordinally-first is fulfilled', function (done) {\n    var iterable = [Promise.resolve(1), Promise.reject(2), Promise.resolve(3)];\n\n    Promise.race(iterable).then(function (value) {\n      assert.strictEqual(value, 1);\n    }).then(done, failIfThrows(done));\n  });\n\n  it('should reject if all promises are settled and the ordinally-first is rejected', function (done) {\n    var iterable = [Promise.reject(1), Promise.reject(2), Promise.resolve(3)];\n\n    Promise.race(iterable).then(\n      function () {\n        assert(false, 'should never get here');\n      },\n      function (reason) {\n        assert.strictEqual(reason, 1);\n      }\n    ).then(done, failIfThrows(done));\n  });\n\n  it('should settle in the same way as the first promise to settle', function (done) {\n    // ensure that even if timeouts are delayed an all execute together,\n    // p2 will settle first.\n    var p2 = delayPromise(2, 200);\n    var p1 = delayPromise(1, 1000);\n    var p3 = delayPromise(3, 500);\n    var iterable = [p1, p2, p3];\n\n    Promise.race(iterable).then(function (value) {\n      assert.strictEqual(value, 2);\n    }).then(done, failIfThrows(done));\n  });\n\n  // see https://github.com/domenic/promises-unwrapping/issues/75\n  it('should never settle when given an empty iterable', function (done) {\n    var iterable = [];\n    var settled = false;\n\n    Promise.race(iterable).then(\n      function () { settled = true; },\n      function () { settled = true; }\n    );\n\n    setTimeout(function () {\n      assert.strictEqual(settled, false);\n      done();\n    }, 300);\n  });\n\n  it('should reject with a TypeError if given a non-iterable', function (done) {\n    var notIterable = {};\n\n    Promise.race(notIterable).then(\n      function () {\n        assert(false, 'should never get here');\n      },\n      function (reason) {\n        assert(reason instanceof TypeError);\n      }\n    ).then(done, failIfThrows(done));\n  });\n});\n"]}
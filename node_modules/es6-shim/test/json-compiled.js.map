{"version":3,"sources":["json.js"],"names":[],"mappings":"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","file":"json-compiled.js","sourcesContent":["/* global describe, it, xit, expect, require */\ndescribe('JSON', function () {\n  var functionsHaveNames = (function foo() {}).name === 'foo';\n  var ifFunctionsHaveNamesIt = functionsHaveNames ? it : xit;\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';\n  var ifSymbolsIt = hasSymbols ? it : xit;\n  var ifSymbolsDescribe = hasSymbols ? describe : xit;\n\n  describe('.stringify()', function () {\n    ifFunctionsHaveNamesIt('has the right name', function () {\n      expect(JSON.stringify.name).to.equal('stringify');\n    });\n\n    ifSymbolsIt('serializes a Symbol to undefined', function () {\n      expect(JSON.stringify(Symbol())).to.equal(undefined);\n    });\n\n    ifSymbolsIt('serializes a Symbol object to {}', function () {\n      expect(function stringifyObjectSymbol() { JSON.stringify(Object(Symbol())); }).not.to['throw']();\n      expect(JSON.stringify(Object(Symbol()))).to.equal('{}');\n    });\n\n    ifSymbolsIt('serializes Symbols in an Array to null', function () {\n      expect(JSON.stringify([Symbol('foo')])).to.equal('[null]');\n    });\n\n    ifSymbolsIt('serializes Symbol objects in an Array to {}', function () {\n      expect(function stringifyObjectSymbolInArray() { JSON.stringify([Object(Symbol('foo'))]); }).not.to['throw']();\n      expect(JSON.stringify([Object(Symbol('foo'))])).to.equal('[{}]');\n    });\n\n    ifSymbolsDescribe('skips symbol properties and values in an object', function () {\n      var enumSym = Symbol('enumerable');\n      var nonenum = Symbol('non-enumerable');\n      var createObject = function () {\n        var obj = { a: 1 };\n        obj[enumSym] = true;\n        obj.sym = enumSym;\n        Object.defineProperty(obj, nonenum, { enumerable: false, value: true });\n        expect(Object.getOwnPropertySymbols(obj)).to.eql([enumSym, nonenum]);\n        return obj;\n      };\n\n      it('works with no replacer', function () {\n        var obj = createObject();\n        expect(JSON.stringify(obj)).to.equal('{\"a\":1}');\n        expect(JSON.stringify(obj, null, '|')).to.equal('{\\n|\"a\": 1\\n}');\n      });\n\n      it('works with a replacer function', function () {\n        var tuples = [];\n        var replacer = function (key, value) {\n          tuples.push([this, key, value]);\n          return value;\n        };\n        var obj = createObject();\n        expect(JSON.stringify(obj, replacer, '|')).to.equal('{\\n|\"a\": 1\\n}'); // populate `tuples` array\n        expect(tuples).to.eql([\n          [{ '': obj }, '', obj],\n          [obj, 'a', 1],\n          [obj, 'sym', enumSym]\n        ]);\n      });\n\n      it('works with a replacer array', function () {\n        var obj = createObject();\n        obj.foo = 'bar';\n        obj[Symbol.prototype.toString.call(enumSym)] = 'tricksy';\n        expect(JSON.stringify(obj, ['a', enumSym])).to.equal('{\"a\":1}');\n        expect(JSON.stringify(obj, ['a', enumSym], '|')).to.equal('{\\n|\"a\": 1\\n}');\n      });\n\n      it('ignores a non-array non-callable replacer object', function () {\n        expect(JSON.stringify('z', { test: null })).to.equal('\"z\"');\n      });\n    });\n  });\n});\n"]}
{"version":3,"sources":["hoist.js"],"names":[],"mappings":"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","file":"hoist-compiled.js","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n\"use strict\";\n\nvar _Object$keys = require(\"babel-runtime/core-js/object/keys\")[\"default\"];\n\nvar _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\nexports.hoist = function (funPath) {\n  t.assertFunction(funPath.node);\n\n  var vars = {};\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    t.assertVariableDeclaration(vdec);\n    // TODO assert.equal(vdec.kind, \"var\");\n    var exprs = [];\n\n    vdec.declarations.forEach(function (dec) {\n      vars[dec.id.name] = dec.id;\n\n      if (dec.init) {\n        exprs.push(t.assignmentExpression(\"=\", dec.id, dec.init));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n\n    if (exprs.length === 0) return null;\n\n    if (exprs.length === 1) return exprs[0];\n\n    return t.sequenceExpression(exprs);\n  }\n\n  funPath.get(\"body\").traverse({\n    VariableDeclaration: {\n      exit: function exit(path) {\n        var expr = varDeclToExpr(path.node, false);\n        if (expr === null) {\n          path.remove();\n        } else {\n          // We don't need to traverse this expression any further because\n          // there can't be any new declarations inside an expression.\n          path.replaceWith(t.expressionStatement(expr));\n        }\n\n        // Since the original node has been either removed or replaced,\n        // avoid traversing it any further.\n        path.skip();\n      }\n    },\n\n    ForStatement: function ForStatement(path) {\n      var init = path.node.init;\n      if (t.isVariableDeclaration(init)) {\n        path.get(\"init\").replaceWith(varDeclToExpr(init, false));\n      }\n    },\n\n    ForXStatement: function ForXStatement(path) {\n      var left = path.get(\"left\");\n      if (left.isVariableDeclaration()) {\n        left.replaceWith(varDeclToExpr(left.node, true));\n      }\n    },\n\n    FunctionDeclaration: function FunctionDeclaration(path) {\n      var node = path.node;\n      vars[node.id.name] = node.id;\n\n      var assignment = t.expressionStatement(t.assignmentExpression(\"=\", node.id, t.functionExpression(node.id, node.params, node.body, node.generator, node.expression)));\n\n      if (path.parentPath.isBlockStatement()) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parentPath.unshiftContainer(\"body\", assignment);\n\n        // Remove the function declaration now that we've inserted the\n        // equivalent assignment form at the beginning of the block.\n        path.remove();\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        path.replaceWith(assignment);\n      }\n\n      // Don't hoist variables out of inner functions.\n      path.skip();\n    },\n\n    FunctionExpression: function FunctionExpression(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    }\n  });\n\n  var paramNames = {};\n  funPath.get(\"params\").forEach(function (paramPath) {\n    var param = paramPath.node;\n    if (t.isIdentifier(param)) {\n      paramNames[param.name] = param;\n    } else {\n      // Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n\n  var declarations = [];\n\n  _Object$keys(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(t.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return t.variableDeclaration(\"var\", declarations);\n};"]}
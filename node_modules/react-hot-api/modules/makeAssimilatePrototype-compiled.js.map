{"version":3,"sources":["makeAssimilatePrototype.js"],"names":[],"mappings":"AAAA,YAAY;;;;;;;AAAC;AAOb,MAAM,CAAC,OAAO,GAAG,SAAS,uBAAuB,GAAG;AAClD,MAAI,eAAe;MACf,eAAe,GAAG,EAAE,CAAC;;AAEzB,WAAS,UAAU,CAAC,GAAG,EAAE;AACvB,WAAO,YAAY;AACjB,UAAI,eAAe,CAAC,GAAG,CAAC,EAAE;AACxB,eAAO,eAAe,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;OACpD;KACF,CAAC;GACH;;AAED,WAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE;AACjC,SAAK,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;;AAElC,QAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,IAClC,GAAG,KAAK,MAAM,IACd,GAAG,KAAK,aAAa,EAAE;AACvB,aAAO;KACR;;AAED,SAAK,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;;AAE7B,QAAI,eAAe,CAAC,GAAG,CAAC,CAAC,oBAAoB,EAAE;AAC7C,WAAK,CAAC,GAAG,CAAC,CAAC,oBAAoB,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,oBAAoB,CAAC;KAC7E;;AAED,QAAI,KAAK,CAAC,kBAAkB,IAAI,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE;AAC7D,WAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;KAC5C;GACF;;AAED,WAAS,qBAAqB,CAAC,cAAc,EAAE;AAC7C,mBAAe,GAAG,EAAE,CAAC;;AAErB,UAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAChE,qBAAe,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;KAC5C,CAAC,CAAC;GACJ;;AAED,WAAS,6BAA6B,CAAC,cAAc,EAAE;AACrD,mBAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACrC,mBAAe,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;AACvC,YAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACjE,qBAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;OAC3B,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ;;AAED,SAAO,SAAS,mBAAmB,CAAC,cAAc,EAAE;AAClD,QAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,8BAA8B,CAAC,EAAE;AACxF,aAAO;KACR;;AAED,yBAAqB,CAAC,cAAc,CAAC,CAAC;AACtC,iCAA6B,CAAC,cAAc,CAAC,CAAC;AAC9C,kBAAc,CAAC,4BAA4B,GAAG,IAAI,CAAC;GACpD,CAAC;CACH,CAAC","file":"makeAssimilatePrototype-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Returns a function that establishes the first prototype passed to it\n * as the \"source of truth\" and patches its methods on subsequent invocations,\n * also patching current and previous prototypes to forward calls to it.\n */\nmodule.exports = function makeAssimilatePrototype() {\n  var storedPrototype,\n      knownPrototypes = [];\n\n  function wrapMethod(key) {\n    return function () {\n      if (storedPrototype[key]) {\n        return storedPrototype[key].apply(this, arguments);\n      }\n    };\n  }\n\n  function patchProperty(proto, key) {\n    proto[key] = storedPrototype[key];\n\n    if (typeof proto[key] !== 'function' ||\n      key === 'type' ||\n      key === 'constructor') {\n      return;\n    }\n\n    proto[key] = wrapMethod(key);\n\n    if (storedPrototype[key].isReactClassApproved) {\n      proto[key].isReactClassApproved = storedPrototype[key].isReactClassApproved;\n    }\n\n    if (proto.__reactAutoBindMap && proto.__reactAutoBindMap[key]) {\n      proto.__reactAutoBindMap[key] = proto[key];\n    }\n  }\n\n  function updateStoredPrototype(freshPrototype) {\n    storedPrototype = {};\n\n    Object.getOwnPropertyNames(freshPrototype).forEach(function (key) {\n      storedPrototype[key] = freshPrototype[key];\n    });\n  }\n\n  function reconcileWithStoredPrototypes(freshPrototype) {\n    knownPrototypes.push(freshPrototype);\n    knownPrototypes.forEach(function (proto) {\n      Object.getOwnPropertyNames(storedPrototype).forEach(function (key) {\n        patchProperty(proto, key);\n      });\n    });\n  }\n\n  return function assimilatePrototype(freshPrototype) {\n    if (Object.prototype.hasOwnProperty.call(freshPrototype, '__isAssimilatedByReactHotAPI')) {\n      return;\n    }\n\n    updateStoredPrototype(freshPrototype);\n    reconcileWithStoredPrototypes(freshPrototype);\n    freshPrototype.__isAssimilatedByReactHotAPI = true;\n  };\n};"]}